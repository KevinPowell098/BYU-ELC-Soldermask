#include "fonts.h"
#include <map>
#include <vector>

#define TFT_WIDTH  320
#define TFT_HEIGHT 480

std::map<char, std::vector<std::vector<bool>>> chars = {
  {'A', {
    {0,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1}
  }},
  {'B', {
    {1,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,1,1,0}
  }},
  {'C', {
    {0,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,1},
    {0,1,1,1,0}
  }},
  {'D', {
    {1,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,1,1,0}
  }},
  {'E', {
    {1,1,1,1,1},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,1,1,1,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,1,1,1,1}
  }},
  {'F', {
    {1,1,1,1,1},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,1,1,1,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0}
  }},
  {'G', {
    {0,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,0},
    {1,0,0,1,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {0,1,1,1,1}
  }},
  {'H', {
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,1,1,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1}
  }},
  {'I', {
    {1,1,1},
    {0,1,0},
    {0,1,0},
    {0,1,0},
    {0,1,0},
    {0,1,0},
    {1,1,1}
  }},
  {'J', {
    {1,1,1,1,1},
    {0,0,0,1,0},
    {0,0,0,1,0},
    {0,0,0,1,0},
    {0,0,0,1,0},
    {1,0,0,1,0},
    {0,1,1,0,0}
  }},
  {'K', {
    {1,0,0,0,1},
    {1,0,0,1,0},
    {1,0,1,0,0},
    {1,1,1,0,0},
    {1,0,0,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1}
  }},
  {'L', {
    {1,0,0,0},
    {1,0,0,0},
    {1,0,0,0},
    {1,0,0,0},
    {1,0,0,0},
    {1,0,0,0},
    {1,1,1,1}
  }},
  {'M', {
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,0,1,1},
    {1,0,1,0,1},
    {1,0,1,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1}
  }},
  {'N', {
    {1,0,0,0,1},
    {1,1,0,0,1},
    {1,1,0,0,1},
    {1,0,1,0,1},
    {1,0,0,1,1},
    {1,0,0,1,1},
    {1,0,0,0,1}
  }},
    {'O', {
    {0,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {0,1,1,1,0}
  }},
  {'P', {
    {1,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,1,1,0},
    {1,0,0,0,0},
    {1,0,0,0,0},
    {1,0,0,0,0}
  }},
  {'Q', {
    {0,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,1,0,1},
    {1,0,0,1,0},
    {0,1,1,0,1}
  }},
  {'R', {
    {1,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,1,1,1,0},
    {1,0,1,0,0},
    {1,0,0,1,0},
    {1,0,0,0,1}
  }},
  {'S', {
    {0,1,1,1,0},
    {1,0,0,0,1},
    {1,0,0,0,0},
    {0,1,1,1,0},
    {0,0,0,0,1},
    {1,0,0,0,1},
    {0,1,1,1,0}
  }},
  {'T', {
    {1,1,1,1,1},
    {0,0,1,0,0},
    {0,0,1,0,0},
    {0,0,1,0,0},
    {0,0,1,0,0},
    {0,0,1,0,0},
    {0,0,1,0,0}
  }},
  {'U', {
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {0,1,1,1,0}
  }},
  {'V', {
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {0,1,0,1,0},
    {0,1,0,1,0},
    {0,0,1,0,0}
  }},
  {'W', {
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,0,0,1},
    {1,0,1,0,1},
    {1,0,1,0,1},
    {0,1,0,1,0},
    {0,1,0,1,0}
  }},
  {'X', {
    {1,0,0,0,1},
    {1,0,0,0,1},
    {0,1,0,1,0},
    {0,0,1,0,0},
    {0,1,0,1,0},
    {1,0,0,0,1},
    {1,0,0,0,1}
  }},
  {'Y', {
    {1,0,0,0,1},
    {1,0,0,0,1},
    {0,1,0,1,0},
    {0,0,1,0,0},
    {0,0,1,0,0},
    {0,0,1,0,0},
    {0,0,1,0,0}
  }},
  {'Z', {
    {1,1,1,1,1},
    {0,0,0,0,1},
    {0,0,0,1,0},
    {0,0,1,0,0},
    {0,1,0,0,0},
    {1,0,0,0,0},
    {1,1,1,1,1}
  }},
    {' ', {
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0},
    {0,0,0,0,0}
  }},  
    {'.', {
    {0,0},
    {0,0},
    {0,0},
    {0,0},
    {0,0},
    {0,0},
    {1,0}
  }},  
    {',', {
    {0,0,0},
    {0,0,0},
    {0,0,0},
    {0,0,0},
    {1,1,0},
    {0,1,0},
    {1,0,0}
  }},  
    {'!', {
    {1,0},
    {1,0},
    {1,0},
    {1,0},
    {1,0},
    {0,0},
    {1,0}
  }},  
    {'?', {
    {0,1,1,1,0},
    {1,0,0,0,1},
    {0,0,0,0,1},
    {0,0,1,1,0},
    {0,0,1,0,0},
    {0,0,0,0,0},
    {0,0,1,0,0}
  }}
};

size_t drawCharFB(int16_t x, int16_t y, char c, uint16_t color) {
  const auto &bitmap = chars[c];
  size_t h = bitmap.size();

  size_t width;

  for (size_t i = 0; i < h; i++) {
    width = bitmap[i].size();

    for (size_t j = 0; j < width; j++) {
      if (bitmap[i][j]) drawPixelFB(x + j, y + i, color);
    }
  }

  return width;
}

void drawWordFB(int16_t x, int16_t y, char* text, uint16_t color) {
  const uint8_t CHAR_W = 5;
  const uint8_t CHAR_H = 7;
  const uint8_t MARGIN = 2;

  uint16_t text_x = x;
  size_t last_w;
  size_t len = strlen(text);

  for (size_t i = 0; i < len; i++) {
    if (text_x + CHAR_W + MARGIN >= TFT_WIDTH) {
      text_x = x;
      y += CHAR_H + MARGIN;

      if (y > TFT_HEIGHT) return;
    }

    last_w = drawCharFB(text_x, y, text[i], color);
    text_x += last_w + MARGIN;
  }
}